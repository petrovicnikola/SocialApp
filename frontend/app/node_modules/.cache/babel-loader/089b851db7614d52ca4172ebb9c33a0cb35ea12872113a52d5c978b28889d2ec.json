{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\petro\\\\Desktop\\\\Project\\\\frontend\\\\app\\\\src\\\\register\\\\Register.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport styles from './Register.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [surname, setSurname] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [password2, setPassword2] = useState('');\n  const [error, setError] = useState('');\n  const isEmpty = str => {\n    if (str === '') return true;\n    return false;\n  };\n  const handleSubmit = async ev => {\n    ev.preventDefault();\n    if (isEmpty(name) || isEmpty(surname) || isEmpty(email) || isEmpty(password) || isEmpty(username) || isEmpty(password2)) {\n      setError(\"All fields are needed!\");\n      return;\n    }\n    if (password !== password2) {\n      setError(\"Passwords are not matching!\");\n      return;\n    }\n    setError('');\n    const user = {\n      name,\n      surname,\n      username,\n      email,\n      password\n    };\n    const response = await fetch('http://localhost:4000/users/register', {\n      method: 'POST',\n      body: JSON.stringify(user),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    if (json['message'] !== 'ok') {\n      setError(json.error);\n    } else {\n      setError('');\n      setName('');\n      setSurname('');\n      setEmail('');\n      setPassword('');\n      setPassword2('');\n      setUsername('');\n      window.location.reload();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.register,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register a New Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      onSubmit: ev => handleSubmit(ev),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: ev => setName(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Surname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: ev => setSurname(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: ev => setUsername(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        onChange: ev => setEmail(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: ev => setPassword(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirm password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: ev => setPassword2(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.btn,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.error,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"7k1emgmDEOFlCXzH8S89uS9Bn5I=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","styles","jsxDEV","_jsxDEV","Register","_s","name","setName","surname","setSurname","username","setUsername","email","setEmail","password","setPassword","password2","setPassword2","error","setError","isEmpty","str","handleSubmit","ev","preventDefault","user","response","fetch","method","body","JSON","stringify","headers","json","console","log","window","location","reload","className","register","children","fileName","_jsxFileName","lineNumber","columnNumber","form","onSubmit","type","onChange","target","value","btn","_c","$RefreshReg$"],"sources":["C:/Users/petro/Desktop/Project/frontend/app/src/register/Register.tsx"],"sourcesContent":["import { FormEvent, useState } from \"react\";\r\nimport styles from './Register.module.css';\r\n\r\nconst Register = () => {\r\n    const [name, setName] = useState<string>('');\r\n    const [surname, setSurname] = useState<string>('');\r\n    const [username, setUsername] = useState<string>('');\r\n    const [email, setEmail] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n    const [password2, setPassword2] = useState<string>('');\r\n\r\n    const [error, setError] = useState<string>('');\r\n\r\n\r\n    const isEmpty = (str: string): boolean => {\r\n        if (str === '')\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    const handleSubmit = async (ev: FormEvent<HTMLFormElement>) => {\r\n        ev.preventDefault();\r\n\r\n        if (isEmpty(name) || \r\n            isEmpty(surname) ||\r\n            isEmpty(email) || \r\n            isEmpty(password) || \r\n            isEmpty(username) || \r\n            isEmpty(password2)\r\n            ){\r\n                setError(\"All fields are needed!\");\r\n                return;\r\n        }\r\n\r\n        if (password !== password2){\r\n            setError(\"Passwords are not matching!\");\r\n            return;\r\n        }\r\n\r\n        setError('');\r\n\r\n        const user = {name, surname, username, email, password};\r\n\r\n        const response = await fetch('http://localhost:4000/users/register', {\r\n            method: 'POST',\r\n            body: JSON.stringify(user),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        const json = await response.json();\r\n\r\n        console.log(json);\r\n\r\n        if (json['message'] !== 'ok'){\r\n            setError(json.error);   \r\n        }\r\n        else {\r\n            setError('');\r\n            setName('');\r\n            setSurname('');\r\n            setEmail('');\r\n            setPassword('');\r\n            setPassword2('');\r\n            setUsername('');\r\n            window.location.reload();\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={styles.register}>\r\n            <h2>Register a New Account</h2>\r\n            <form className={styles.form} onSubmit={(ev) => handleSubmit(ev)}>\r\n\r\n                <label>Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={(ev) => setName(ev.target.value)}\r\n                />\r\n\r\n                <label>Surname</label>\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={(ev) => setSurname(ev.target.value)}\r\n                />\r\n\r\n\r\n                <label>Username</label>\r\n                <input \r\n                    type=\"text\"\r\n                    onChange={(ev) => setUsername(ev.target.value)}\r\n                />\r\n\r\n                <label>Email</label>\r\n                <input \r\n                    type=\"email\"\r\n                    onChange={(ev) => setEmail(ev.target.value)}\r\n                />\r\n\r\n\r\n                <label>Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    onChange={(ev) => setPassword(ev.target.value)}\r\n                />\r\n\r\n                <label>Confirm password</label>\r\n                <input \r\n                    type=\"password\"\r\n                    onChange={(ev) => setPassword2(ev.target.value)}\r\n                />\r\n\r\n                <button \r\n                    className={styles.btn}>\r\n                    Register\r\n                </button>\r\n            </form>\r\n            {error && <div className={styles.error}>{error}</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;"],"mappings":";;AAAA,SAAoBA,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAClD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAS,EAAE,CAAC;EACpD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAS,EAAE,CAAC;EACpD,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAS,EAAE,CAAC;EAEtD,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAS,EAAE,CAAC;EAG9C,MAAMoB,OAAO,GAAIC,GAAW,IAAc;IACtC,IAAIA,GAAG,KAAK,EAAE,EACV,OAAO,IAAI;IACf,OAAO,KAAK;EAChB,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,EAA8B,IAAK;IAC3DA,EAAE,CAACC,cAAc,CAAC,CAAC;IAEnB,IAAIJ,OAAO,CAACd,IAAI,CAAC,IACbc,OAAO,CAACZ,OAAO,CAAC,IAChBY,OAAO,CAACR,KAAK,CAAC,IACdQ,OAAO,CAACN,QAAQ,CAAC,IACjBM,OAAO,CAACV,QAAQ,CAAC,IACjBU,OAAO,CAACJ,SAAS,CAAC,EACjB;MACGG,QAAQ,CAAC,wBAAwB,CAAC;MAClC;IACR;IAEA,IAAIL,QAAQ,KAAKE,SAAS,EAAC;MACvBG,QAAQ,CAAC,6BAA6B,CAAC;MACvC;IACJ;IAEAA,QAAQ,CAAC,EAAE,CAAC;IAEZ,MAAMM,IAAI,GAAG;MAACnB,IAAI;MAAEE,OAAO;MAAEE,QAAQ;MAAEE,KAAK;MAAEE;IAAQ,CAAC;IAEvD,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC;MAC1BO,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IAEjB,IAAIA,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,EAAC;MACzBd,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC;IACxB,CAAC,MACI;MACDC,QAAQ,CAAC,EAAE,CAAC;MACZZ,OAAO,CAAC,EAAE,CAAC;MACXE,UAAU,CAAC,EAAE,CAAC;MACdI,QAAQ,CAAC,EAAE,CAAC;MACZE,WAAW,CAAC,EAAE,CAAC;MACfE,YAAY,CAAC,EAAE,CAAC;MAChBN,WAAW,CAAC,EAAE,CAAC;MACfyB,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC5B;EAEJ,CAAC;EAED,oBACInC,OAAA;IAAKoC,SAAS,EAAEtC,MAAM,CAACuC,QAAS;IAAAC,QAAA,gBAC5BtC,OAAA;MAAAsC,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B1C,OAAA;MAAMoC,SAAS,EAAEtC,MAAM,CAAC6C,IAAK;MAACC,QAAQ,EAAGxB,EAAE,IAAKD,YAAY,CAACC,EAAE,CAAE;MAAAkB,QAAA,gBAE7DtC,OAAA;QAAAsC,QAAA,EAAO;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnB1C,OAAA;QACI6C,IAAI,EAAC,MAAM;QACXC,QAAQ,EAAG1B,EAAE,IAAKhB,OAAO,CAACgB,EAAE,CAAC2B,MAAM,CAACC,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eAEF1C,OAAA;QAAAsC,QAAA,EAAO;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtB1C,OAAA;QACI6C,IAAI,EAAC,MAAM;QACXC,QAAQ,EAAG1B,EAAE,IAAKd,UAAU,CAACc,EAAE,CAAC2B,MAAM,CAACC,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eAGF1C,OAAA;QAAAsC,QAAA,EAAO;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvB1C,OAAA;QACI6C,IAAI,EAAC,MAAM;QACXC,QAAQ,EAAG1B,EAAE,IAAKZ,WAAW,CAACY,EAAE,CAAC2B,MAAM,CAACC,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eAEF1C,OAAA;QAAAsC,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpB1C,OAAA;QACI6C,IAAI,EAAC,OAAO;QACZC,QAAQ,EAAG1B,EAAE,IAAKV,QAAQ,CAACU,EAAE,CAAC2B,MAAM,CAACC,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eAGF1C,OAAA;QAAAsC,QAAA,EAAO;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvB1C,OAAA;QACI6C,IAAI,EAAC,UAAU;QACfC,QAAQ,EAAG1B,EAAE,IAAKR,WAAW,CAACQ,EAAE,CAAC2B,MAAM,CAACC,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eAEF1C,OAAA;QAAAsC,QAAA,EAAO;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC/B1C,OAAA;QACI6C,IAAI,EAAC,UAAU;QACfC,QAAQ,EAAG1B,EAAE,IAAKN,YAAY,CAACM,EAAE,CAAC2B,MAAM,CAACC,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eAEF1C,OAAA;QACIoC,SAAS,EAAEtC,MAAM,CAACmD,GAAI;QAAAX,QAAA,EAAC;MAE3B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,EACN3B,KAAK,iBAAIf,OAAA;MAAKoC,SAAS,EAAEtC,MAAM,CAACiB,KAAM;MAAAuB,QAAA,EAAEvB;IAAK;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEd,CAAC;AAAAxC,EAAA,CAvHKD,QAAQ;AAAAiD,EAAA,GAARjD,QAAQ;AAyHd,eAAeA,QAAQ;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}