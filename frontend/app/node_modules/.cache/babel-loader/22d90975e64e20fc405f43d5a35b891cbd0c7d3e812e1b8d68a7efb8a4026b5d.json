{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\petro\\\\Desktop\\\\Project\\\\frontend\\\\app\\\\src\\\\feed\\\\Feed.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useUserContext } from \"../hooks/useUserContext\";\nimport StatusAdd from \"../status_add/StatusAdd\";\nimport styles from './Feed.module.css';\nimport StatusList from \"../status_list/StatusList\";\nimport { useStatusContext } from \"../hooks/useStatusContext\";\nimport { SET_STATUSES } from \"../contexts/StatusContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Feed = () => {\n  _s();\n  const {\n    state\n  } = useUserContext();\n  const user = state.user;\n  //const { data } = useFetch('http://localhost:4000/statuses');\n  const {\n    dispatch,\n    state: statusState\n  } = useStatusContext();\n  useEffect(() => {\n    const fetchStatuses = async () => {\n      const response = await fetch('http://localhost:4000/statuses');\n      const json = await response.json();\n      console.log(json);\n      dispatch({\n        type: SET_STATUSES,\n        payload: json\n      });\n    };\n    fetchStatuses();\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(StatusAdd, {\n        userName: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(StatusList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(Feed, \"oa9EO4o+LFRM8N7wbmVm++vlmg0=\", false, function () {\n  return [useUserContext, useStatusContext];\n});\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["useEffect","useUserContext","StatusAdd","styles","StatusList","useStatusContext","SET_STATUSES","jsxDEV","_jsxDEV","Fragment","_Fragment","Feed","_s","state","user","dispatch","statusState","fetchStatuses","response","fetch","json","console","log","type","payload","children","className","container","userName","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/petro/Desktop/Project/frontend/app/src/feed/Feed.tsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useUserContext } from \"../hooks/useUserContext\";\r\nimport StatusAdd from \"../status_add/StatusAdd\";\r\nimport styles from './Feed.module.css';\r\nimport useFetch from \"../hooks/useFetch\";\r\nimport StatusList from \"../status_list/StatusList\";\r\nimport { useStatusContext } from \"../hooks/useStatusContext\";\r\nimport { SET_STATUSES } from \"../contexts/StatusContext\";\r\n\r\nconst Feed = (): JSX.Element => {\r\n    const { state } = useUserContext();\r\n    const user = state.user;\r\n    //const { data } = useFetch('http://localhost:4000/statuses');\r\n    const { dispatch, state: statusState } = useStatusContext();\r\n\r\n    useEffect(() => {\r\n        const fetchStatuses = async () => {\r\n            const response = await fetch('http://localhost:4000/statuses')\r\n            const json = await response.json()\r\n            \r\n            console.log(json)\r\n            dispatch({type: SET_STATUSES, payload: json})\r\n          }\r\n      \r\n          fetchStatuses()\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            {   user && (\r\n                <div className={styles.container}>\r\n                    {/*<h2>Welcome to The Social App Feed, {user && user.name}!</h2>*/}\r\n                    <StatusAdd userName = {user.name} />\r\n                    <StatusList></StatusList>\r\n                </div>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Feed;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,cAAc,QAAQ,yBAAyB;AACxD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,OAAOC,UAAU,MAAM,2BAA2B;AAClD,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,YAAY,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzD,MAAMC,IAAI,GAAGA,CAAA,KAAmB;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAM,CAAC,GAAGZ,cAAc,CAAC,CAAC;EAClC,MAAMa,IAAI,GAAGD,KAAK,CAACC,IAAI;EACvB;EACA,MAAM;IAAEC,QAAQ;IAAEF,KAAK,EAAEG;EAAY,CAAC,GAAGX,gBAAgB,CAAC,CAAC;EAE3DL,SAAS,CAAC,MAAM;IACZ,MAAMiB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;MAC9D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;MAElCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBL,QAAQ,CAAC;QAACQ,IAAI,EAAEjB,YAAY;QAAEkB,OAAO,EAAEJ;MAAI,CAAC,CAAC;IAC/C,CAAC;IAEDH,aAAa,CAAC,CAAC;EACrB,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAEd,oBACIP,OAAA,CAAAE,SAAA;IAAAe,QAAA,EACQX,IAAI,iBACJN,OAAA;MAAKkB,SAAS,EAAEvB,MAAM,CAACwB,SAAU;MAAAF,QAAA,gBAE7BjB,OAAA,CAACN,SAAS;QAAC0B,QAAQ,EAAId,IAAI,CAACe;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpCzB,OAAA,CAACJ,UAAU;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB;EACJ,gBAEP,CAAC;AAEX,CAAC;AAAArB,EAAA,CA9BKD,IAAI;EAAA,QACYV,cAAc,EAGSI,gBAAgB;AAAA;AAAA6B,EAAA,GAJvDvB,IAAI;AAgCV,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}