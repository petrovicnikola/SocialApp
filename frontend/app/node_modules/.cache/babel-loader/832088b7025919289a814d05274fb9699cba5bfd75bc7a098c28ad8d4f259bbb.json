{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\petro\\\\Desktop\\\\Project\\\\frontend\\\\app\\\\src\\\\profile\\\\Dialog.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport styles from './Profile.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dialog = props => {\n  _s();\n  const {\n    title,\n    onClose,\n    onSave,\n    defaultValue,\n    isOpen\n  } = props;\n  const dialogRef = useRef(null);\n  useEffect(() => {\n    if (isOpen) {\n      var _dialogRef$current;\n      (_dialogRef$current = dialogRef.current) === null || _dialogRef$current === void 0 ? void 0 : _dialogRef$current.showModal();\n    } else {\n      var _dialogRef$current2;\n      (_dialogRef$current2 = dialogRef.current) === null || _dialogRef$current2 === void 0 ? void 0 : _dialogRef$current2.close();\n    }\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.centerPoint,\n    children: /*#__PURE__*/_jsxDEV(\"dialog\", {\n      ref: dialogRef,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.cancelButton,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Dialog, \"9PxoOcTjzEwd023cmhgaBdjzFyE=\");\n_c = Dialog;\nexport default Dialog;\nvar _c;\n$RefreshReg$(_c, \"Dialog\");","map":{"version":3,"names":["useEffect","useRef","styles","jsxDEV","_jsxDEV","Dialog","props","_s","title","onClose","onSave","defaultValue","isOpen","dialogRef","_dialogRef$current","current","showModal","_dialogRef$current2","close","className","centerPoint","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","type","buttons","cancelButton","_c","$RefreshReg$"],"sources":["C:/Users/petro/Desktop/Project/frontend/app/src/profile/Dialog.tsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport styles from './Profile.module.css';\r\n\r\ninterface DialogProps {\r\n    title: string;\r\n    onClose: () => void;\r\n    onSave: () => void;\r\n    defaultValue?: string;\r\n    isOpen: boolean;\r\n}\r\n\r\nconst Dialog = (props: DialogProps): JSX.Element => {\r\n    const { title, onClose, onSave, defaultValue, isOpen } = props;\r\n    const dialogRef = useRef<HTMLDialogElement>(null);\r\n    \r\n    useEffect(() => {\r\n        if (isOpen){\r\n            dialogRef.current?.showModal();\r\n        }\r\n        else {\r\n            dialogRef.current?.close();\r\n        }\r\n    }, [isOpen])\r\n\r\n    return (\r\n        <div className={styles.centerPoint}>\r\n            <dialog ref={dialogRef}>\r\n                <h2>{title}</h2>\r\n                <input type=\"text\"/>\r\n                <div className={styles.buttons}>\r\n                    <button>Save</button>\r\n                    <button className = {styles.cancelButton}>Cancel</button>\r\n                </div>\r\n            </dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialog;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU1C,MAAMC,MAAM,GAAIC,KAAkB,IAAkB;EAAAC,EAAA;EAChD,MAAM;IAAEC,KAAK;IAAEC,OAAO;IAAEC,MAAM;IAAEC,YAAY;IAAEC;EAAO,CAAC,GAAGN,KAAK;EAC9D,MAAMO,SAAS,GAAGZ,MAAM,CAAoB,IAAI,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACZ,IAAIY,MAAM,EAAC;MAAA,IAAAE,kBAAA;MACP,CAAAA,kBAAA,GAAAD,SAAS,CAACE,OAAO,cAAAD,kBAAA,uBAAjBA,kBAAA,CAAmBE,SAAS,CAAC,CAAC;IAClC,CAAC,MACI;MAAA,IAAAC,mBAAA;MACD,CAAAA,mBAAA,GAAAJ,SAAS,CAACE,OAAO,cAAAE,mBAAA,uBAAjBA,mBAAA,CAAmBC,KAAK,CAAC,CAAC;IAC9B;EACJ,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC;EAEZ,oBACIR,OAAA;IAAKe,SAAS,EAAEjB,MAAM,CAACkB,WAAY;IAAAC,QAAA,eAC/BjB,OAAA;MAAQkB,GAAG,EAAET,SAAU;MAAAQ,QAAA,gBACnBjB,OAAA;QAAAiB,QAAA,EAAKb;MAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChBtB,OAAA;QAAOuB,IAAI,EAAC;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACpBtB,OAAA;QAAKe,SAAS,EAAEjB,MAAM,CAAC0B,OAAQ;QAAAP,QAAA,gBAC3BjB,OAAA;UAAAiB,QAAA,EAAQ;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACrBtB,OAAA;UAAQe,SAAS,EAAIjB,MAAM,CAAC2B,YAAa;UAAAR,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAAAnB,EAAA,CAzBKF,MAAM;AAAAyB,EAAA,GAANzB,MAAM;AA2BZ,eAAeA,MAAM;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}