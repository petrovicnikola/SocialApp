{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch(url).then(res => {\n      if (!res.ok) {\n        throw new Error('The data could not be fetched!');\n      }\n      return res.json();\n    }).then(data => {\n      setData(data);\n    }).catch(err => {});\n  }, [url]);\n  return {\n    data\n  };\n};\n_s(useFetch, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\nexport default useFetch;","map":{"version":3,"names":["useEffect","useState","useFetch","url","_s","data","setData","fetch","then","res","ok","Error","json","catch","err"],"sources":["C:/Users/petro/Desktop/Project/frontend/app/src/hooks/useFetch.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Status } from \"../models/Status\";\r\n\r\nconst useFetch = (url: string) => {\r\n    const [data, setData] = useState<Status[]>([]);\r\n\r\n    useEffect(() => {\r\n        fetch(url)\r\n        .then(res => {\r\n            if (!res.ok){\r\n                throw new Error('The data could not be fetched!');\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setData(data);\r\n        })\r\n        .catch(err => {\r\n\r\n        })\r\n    }, [url]);\r\n\r\n    return { data }\r\n}\r\n\r\nexport default useFetch;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAG3C,MAAMC,QAAQ,GAAIC,GAAW,IAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAW,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACZO,KAAK,CAACJ,GAAG,CAAC,CACTK,IAAI,CAACC,GAAG,IAAI;MACT,IAAI,CAACA,GAAG,CAACC,EAAE,EAAC;QACR,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;MACrD;MACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACrB,CAAC,CAAC,CACDJ,IAAI,CAACH,IAAI,IAAI;MACVC,OAAO,CAACD,IAAI,CAAC;IACjB,CAAC,CAAC,CACDQ,KAAK,CAACC,GAAG,IAAI,CAEd,CAAC,CAAC;EACN,CAAC,EAAE,CAACX,GAAG,CAAC,CAAC;EAET,OAAO;IAAEE;EAAK,CAAC;AACnB,CAAC;AAAAD,EAAA,CApBKF,QAAQ;AAsBd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}