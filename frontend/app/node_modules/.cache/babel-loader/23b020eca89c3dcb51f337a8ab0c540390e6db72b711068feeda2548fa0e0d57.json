{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\petro\\\\Desktop\\\\Project\\\\frontend\\\\app\\\\src\\\\status_comments\\\\StatusComments.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styles from './StatusComments.module.css';\nimport StatusDetails from \"../status_details/StatusDetails\";\nimport { useUserContext } from \"../hooks/useUserContext\";\nimport CommentDetails from \"../status_comment_details/CommentDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatusComments = () => {\n  _s();\n  const {\n    state\n  } = useUserContext();\n  const user = state.user;\n  const idParam = useParams();\n  const [status, setStatus] = useState(null);\n  const [text, setText] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const [commented, setCommented] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      let body = {\n        id: idParam.id\n      };\n      const response = await fetch('http://localhost:4000/statuses/getWithId', {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const json = await response.json();\n      if (response.ok) {\n        setStatus(json);\n      } else {\n        console.log('Error fetching data!');\n      }\n    };\n    fetchData();\n  }, []);\n  const handleTextChange = ev => {\n    ev.preventDefault();\n    setText(ev.target.value);\n    if (ev.target.value !== '') setDisabled(false);else setDisabled(true);\n  };\n  const postComment = async () => {\n    const comment = {\n      username: user === null || user === void 0 ? void 0 : user.username,\n      text: text,\n      id: idParam.id\n    };\n    const response = await fetch('http://localhost:4000/statuses/comment', {\n      method: 'POST',\n      body: JSON.stringify(comment),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n    if (response.ok && status) {\n      status.comments = json;\n      status.comments = status.comments.sort((c1, c2) => c2.createdAt - c1.createdAt);\n      console.log(json);\n      setCommented(!commented);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.status,\n      children: status && /*#__PURE__*/_jsxDEV(StatusDetails, {\n        status: status,\n        showButtons: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.commentsArea,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Write a comment.\",\n        onChange: ev => handleTextChange(ev)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), !disabled && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.btn,\n        onClick: postComment,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 31\n      }, this), disabled && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.disabledBtn,\n        disabled: disabled,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.divider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.commentsList,\n        children: status && status.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.commentContainer,\n          children: /*#__PURE__*/_jsxDEV(CommentDetails, {\n            comment: comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(StatusComments, \"vHA86OhM8X+XligqVHDxYEB4YVI=\", false, function () {\n  return [useUserContext, useParams];\n});\n_c = StatusComments;\nexport default StatusComments;\nvar _c;\n$RefreshReg$(_c, \"StatusComments\");","map":{"version":3,"names":["useEffect","useState","useParams","styles","StatusDetails","useUserContext","CommentDetails","jsxDEV","_jsxDEV","StatusComments","_s","state","user","idParam","status","setStatus","text","setText","disabled","setDisabled","commented","setCommented","fetchData","body","id","response","fetch","method","JSON","stringify","headers","json","ok","console","log","handleTextChange","ev","preventDefault","target","value","postComment","comment","username","comments","sort","c1","c2","createdAt","className","container","children","showButtons","fileName","_jsxFileName","lineNumber","columnNumber","commentsArea","placeholder","onChange","btn","onClick","disabledBtn","divider","commentsList","map","commentContainer","_c","$RefreshReg$"],"sources":["C:/Users/petro/Desktop/Project/frontend/app/src/status_comments/StatusComments.tsx"],"sourcesContent":["import { ChangeEvent, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Status } from \"../models/Status\";\r\nimport styles from './StatusComments.module.css';\r\nimport StatusDetails from \"../status_details/StatusDetails\";\r\nimport { Comment } from \"../models/Comment\";\r\nimport { useUserContext } from \"../hooks/useUserContext\";\r\nimport CommentDetails from \"../status_comment_details/CommentDetails\";\r\n\r\nconst StatusComments = (): JSX.Element => {\r\n    const { state } = useUserContext();\r\n    const user = state.user;\r\n    const idParam = useParams<{id: string}>();\r\n    const [status, setStatus] = useState<Status | null>(null);\r\n    const [text, setText] = useState<String>('');\r\n    const [disabled, setDisabled] = useState<boolean>(true);\r\n    const [commented, setCommented] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            let body = {id: idParam.id}; \r\n            const response = await fetch('http://localhost:4000/statuses/getWithId', {\r\n                method: 'POST',\r\n                body: JSON.stringify(body),\r\n                headers: {\r\n                    'Content-Type': 'application/json' \r\n                }\r\n            });\r\n\r\n            const json = await response.json();\r\n\r\n            if (response.ok){\r\n                setStatus(json);\r\n            }\r\n            else {\r\n                console.log('Error fetching data!');\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleTextChange = (ev: ChangeEvent<HTMLTextAreaElement>) => {\r\n        ev.preventDefault();\r\n        setText(ev.target.value);\r\n        if (ev.target.value !== '')\r\n            setDisabled(false);\r\n        else\r\n            setDisabled(true);\r\n    }\r\n\r\n    const postComment = async () => {\r\n        const comment = {username: user?.username, text: text, id: idParam.id};\r\n\r\n        const response = await fetch('http://localhost:4000/statuses/comment', {\r\n            method: 'POST',\r\n            body: JSON.stringify(comment),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        const json = await response.json();\r\n\r\n        if (response.ok && status){\r\n            status.comments = json;\r\n            status.comments = status.comments.sort((c1, c2) => c2.createdAt - c1.createdAt);\r\n            console.log(json);\r\n            setCommented(!commented);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.status}>\r\n                {status && <StatusDetails status={status} showButtons={false}/>}\r\n            </div>\r\n            <div className={styles.commentsArea}>\r\n                <textarea placeholder='Write a comment.' onChange={(ev) => handleTextChange(ev)}/>\r\n                {!disabled && <button className={styles.btn} onClick={postComment}>Post</button>}\r\n                {disabled && <button className={styles.disabledBtn} disabled={disabled}>Post</button>}\r\n                <div className={styles.divider}></div>\r\n                {/*Comments*/}\r\n                <div className={styles.commentsList}>\r\n                    {status && status.comments.map((comment: Comment) => (\r\n                        <div className={styles.commentContainer}>\r\n                            <CommentDetails comment={comment}/>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default StatusComments;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}