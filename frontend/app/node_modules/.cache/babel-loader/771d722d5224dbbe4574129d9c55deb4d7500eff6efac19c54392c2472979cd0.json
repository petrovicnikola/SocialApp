{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\petro\\\\Desktop\\\\Project\\\\frontend\\\\app\\\\src\\\\feed\\\\Feed.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useUserContext } from \"../hooks/useUserContext\";\nimport StatusAdd from \"../status_add/StatusAdd\";\nimport styles from './Feed.module.css';\nimport StatusList from \"../status_list/StatusList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Feed = () => {\n  _s();\n  const {\n    state\n  } = useUserContext();\n  const user = state.user;\n  const [data, setData] = useState(null);\n  const [fetchData, setFetchData] = useState(false);\n  const statusAddedCallback = () => {\n    setFetchData(!fetchData);\n  };\n  useEffect(() => {\n    fetch('http://localhost:4000/statuses').then(res => {\n      if (!res.ok) {\n        throw new Error('The data could not be fetched!');\n      }\n      return res.json();\n    }).then(data => {\n      setData(data);\n    }).catch(err => {});\n  }, [fetchData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(StatusAdd, {\n        userName: user.name,\n        callback: statusAddedCallback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), data && /*#__PURE__*/_jsxDEV(StatusList, {\n        statuses: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(Feed, \"rrptM1EbljRMy9CXAy8PqN9C2Vw=\", false, function () {\n  return [useUserContext];\n});\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["useEffect","useState","useUserContext","StatusAdd","styles","StatusList","jsxDEV","_jsxDEV","Fragment","_Fragment","Feed","_s","state","user","data","setData","fetchData","setFetchData","statusAddedCallback","fetch","then","res","ok","Error","json","catch","err","children","className","container","userName","name","callback","fileName","_jsxFileName","lineNumber","columnNumber","statuses","_c","$RefreshReg$"],"sources":["C:/Users/petro/Desktop/Project/frontend/app/src/feed/Feed.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useUserContext } from \"../hooks/useUserContext\";\r\nimport StatusAdd from \"../status_add/StatusAdd\";\r\nimport styles from './Feed.module.css';\r\nimport useFetch from \"../hooks/useFetch\";\r\nimport StatusList from \"../status_list/StatusList\";\r\n\r\nconst Feed = (): JSX.Element => {\r\n    const { state } = useUserContext();\r\n    const user = state.user;\r\n    const [data, setData] = useState(null);\r\n    const [fetchData, setFetchData] = useState(false);\r\n\r\n    const statusAddedCallback = () => {\r\n        setFetchData(!fetchData);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:4000/statuses')\r\n        .then(res => {\r\n            if (!res.ok){\r\n                throw new Error('The data could not be fetched!');\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setData(data);\r\n        })\r\n        .catch(err => {\r\n\r\n        })\r\n    }, [fetchData]);\r\n\r\n    return (\r\n        <>\r\n            {   user && (\r\n                <div className={styles.container}>\r\n                    {/*<h2>Welcome to The Social App Feed, {user && user.name}!</h2>*/}\r\n                    <StatusAdd userName = {user.name} callback={statusAddedCallback}/>\r\n                    {data && <StatusList statuses={data}></StatusList>}\r\n                </div>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Feed;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,cAAc,QAAQ,yBAAyB;AACxD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,OAAOC,UAAU,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,IAAI,GAAGA,CAAA,KAAmB;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAM,CAAC,GAAGV,cAAc,CAAC,CAAC;EAClC,MAAMW,IAAI,GAAGD,KAAK,CAACC,IAAI;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMiB,mBAAmB,GAAGA,CAAA,KAAM;IAC9BD,YAAY,CAAC,CAACD,SAAS,CAAC;EAC5B,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACZmB,KAAK,CAAC,gCAAgC,CAAC,CACtCC,IAAI,CAACC,GAAG,IAAI;MACT,IAAI,CAACA,GAAG,CAACC,EAAE,EAAC;QACR,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;MACrD;MACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACrB,CAAC,CAAC,CACDJ,IAAI,CAACN,IAAI,IAAI;MACVC,OAAO,CAACD,IAAI,CAAC;IACjB,CAAC,CAAC,CACDW,KAAK,CAACC,GAAG,IAAI,CAEd,CAAC,CAAC;EACN,CAAC,EAAE,CAACV,SAAS,CAAC,CAAC;EAEf,oBACIT,OAAA,CAAAE,SAAA;IAAAkB,QAAA,EACQd,IAAI,iBACJN,OAAA;MAAKqB,SAAS,EAAExB,MAAM,CAACyB,SAAU;MAAAF,QAAA,gBAE7BpB,OAAA,CAACJ,SAAS;QAAC2B,QAAQ,EAAIjB,IAAI,CAACkB,IAAK;QAACC,QAAQ,EAAEd;MAAoB;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EACjEtB,IAAI,iBAAIP,OAAA,CAACF,UAAU;QAACgC,QAAQ,EAAEvB;MAAK;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD;EACJ,gBAEP,CAAC;AAEX,CAAC;AAAAzB,EAAA,CAtCKD,IAAI;EAAA,QACYR,cAAc;AAAA;AAAAoC,EAAA,GAD9B5B,IAAI;AAwCV,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}