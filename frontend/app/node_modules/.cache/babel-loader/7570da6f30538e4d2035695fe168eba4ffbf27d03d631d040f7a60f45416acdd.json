{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatusComments = () => {\n  _s();\n  const idParam = useParams();\n  const [status, setStatus] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch('http://localhost:4000/statuses/getWithId', {\n        method: 'POST',\n        body: idParam.id\n      });\n      const json = await response.json();\n      if (response.ok) {\n        setStatus(json);\n        console.log(json);\n      } else {\n        console.log('Error fetching data!');\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(StatusComments, \"yaQsW8hBzPPbSAwY7eugkaC+b9M=\", false, function () {\n  return [useParams];\n});\n_c = StatusComments;\nexport default StatusComments;\nvar _c;\n$RefreshReg$(_c, \"StatusComments\");","map":{"version":3,"names":["useEffect","useState","useParams","Fragment","_Fragment","jsxDEV","_jsxDEV","StatusComments","_s","idParam","status","setStatus","fetchData","response","fetch","method","body","id","json","ok","console","log","_c","$RefreshReg$"],"sources":["C:/Users/petro/Desktop/Project/frontend/app/src/status_comments/StatusComments.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Status } from \"../models/Status\";\r\nimport useFetch from \"../hooks/useFetch\";\r\n\r\nconst StatusComments = (): JSX.Element => {\r\n    const idParam = useParams<{id: string}>();\r\n    const [status, setStatus] = useState<Status | null>(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await fetch('http://localhost:4000/statuses/getWithId', {\r\n                method: 'POST',\r\n                body: idParam.id\r\n            });\r\n\r\n            const json = await response.json();\r\n\r\n            if (response.ok){\r\n                setStatus(json);\r\n                console.log(json);\r\n            }\r\n            else {\r\n                console.log('Error fetching data!');\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        </>\r\n      );\r\n}\r\n\r\nexport default StatusComments;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAI7C,MAAMC,cAAc,GAAGA,CAAA,KAAmB;EAAAC,EAAA;EACtC,MAAMC,OAAO,GAAGP,SAAS,CAAe,CAAC;EACzC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;EAEzDD,SAAS,CAAC,MAAM;IACZ,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;QACrEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEP,OAAO,CAACQ;MAClB,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,IAAIL,QAAQ,CAACM,EAAE,EAAC;QACZR,SAAS,CAACO,IAAI,CAAC;QACfE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACrB,CAAC,MACI;QACDE,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACvC;IACJ,CAAC;IAEDT,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA,CAAAF,SAAA,mBACE,CAAC;AAEX,CAAC;AAAAI,EAAA,CA7BKD,cAAc;EAAA,QACAL,SAAS;AAAA;AAAAoB,EAAA,GADvBf,cAAc;AA+BpB,eAAeA,cAAc;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}