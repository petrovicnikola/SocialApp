{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\petro\\\\Desktop\\\\Project\\\\frontend\\\\app\\\\src\\\\profile\\\\Dialog.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport styles from './Profile.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dialog = props => {\n  _s();\n  const {\n    title,\n    onClose,\n    onSave,\n    defaultValue,\n    isOpen\n  } = props;\n  const dialogRef = useRef(null);\n  const [inputValue, setInputValue] = useState(defaultValue);\n  const handleInputChange = ev => {\n    setInputValue(ev.target.value);\n  };\n  useEffect(() => {\n    if (isOpen) {\n      var _dialogRef$current;\n      (_dialogRef$current = dialogRef.current) === null || _dialogRef$current === void 0 ? void 0 : _dialogRef$current.showModal();\n    } else {\n      var _dialogRef$current2;\n      (_dialogRef$current2 = dialogRef.current) === null || _dialogRef$current2 === void 0 ? void 0 : _dialogRef$current2.close();\n    }\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(\"dialog\", {\n    ref: dialogRef,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: ev => handleInputChange(ev)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttons,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onSave(inputValue),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.cancelButton,\n        onClick: () => onClose(),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Dialog, \"jFNpRatfOeM8mjbxzbd3h9dw+Y4=\");\n_c = Dialog;\nexport default Dialog;\nvar _c;\n$RefreshReg$(_c, \"Dialog\");","map":{"version":3,"names":["useEffect","useRef","useState","styles","jsxDEV","_jsxDEV","Dialog","props","_s","title","onClose","onSave","defaultValue","isOpen","dialogRef","inputValue","setInputValue","handleInputChange","ev","target","value","_dialogRef$current","current","showModal","_dialogRef$current2","close","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","className","buttons","onClick","cancelButton","_c","$RefreshReg$"],"sources":["C:/Users/petro/Desktop/Project/frontend/app/src/profile/Dialog.tsx"],"sourcesContent":["import { ChangeEvent, useEffect, useRef, useState } from \"react\";\r\nimport styles from './Profile.module.css';\r\n\r\ninterface DialogProps {\r\n    title: string;\r\n    onClose: () => void;\r\n    onSave: (value?: string) => void;\r\n    defaultValue?: string;\r\n    isOpen: boolean;\r\n}\r\n\r\nconst Dialog = (props: DialogProps): JSX.Element => {\r\n    const { title, onClose, onSave, defaultValue, isOpen } = props;\r\n    const dialogRef = useRef<HTMLDialogElement>(null);\r\n    const [inputValue, setInputValue] = useState<string | undefined>(defaultValue);\r\n\r\n    const handleInputChange = (ev: ChangeEvent<HTMLInputElement>) => {\r\n        setInputValue(ev.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isOpen){\r\n            dialogRef.current?.showModal();\r\n        }\r\n        else {\r\n            dialogRef.current?.close();\r\n        }\r\n    }, [isOpen])\r\n\r\n    return (\r\n        <dialog ref={dialogRef}>\r\n            <h2>{title}</h2>\r\n            <input type=\"text\" value={inputValue} onChange={(ev) => handleInputChange(ev)}/>\r\n            <div className={styles.buttons}>\r\n                <button onClick={() => onSave(inputValue)}>Save</button>\r\n                <button className = {styles.cancelButton} onClick={() => onClose()}>Cancel</button>\r\n            </div>\r\n        </dialog>\r\n    );\r\n}\r\n\r\nexport default Dialog;"],"mappings":";;AAAA,SAAsBA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAChE,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU1C,MAAMC,MAAM,GAAIC,KAAkB,IAAkB;EAAAC,EAAA;EAChD,MAAM;IAAEC,KAAK;IAAEC,OAAO;IAAEC,MAAM;IAAEC,YAAY;IAAEC;EAAO,CAAC,GAAGN,KAAK;EAC9D,MAAMO,SAAS,GAAGb,MAAM,CAAoB,IAAI,CAAC;EACjD,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAqBU,YAAY,CAAC;EAE9E,MAAMK,iBAAiB,GAAIC,EAAiC,IAAK;IAC7DF,aAAa,CAACE,EAAE,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACZ,IAAIa,MAAM,EAAC;MAAA,IAAAQ,kBAAA;MACP,CAAAA,kBAAA,GAAAP,SAAS,CAACQ,OAAO,cAAAD,kBAAA,uBAAjBA,kBAAA,CAAmBE,SAAS,CAAC,CAAC;IAClC,CAAC,MACI;MAAA,IAAAC,mBAAA;MACD,CAAAA,mBAAA,GAAAV,SAAS,CAACQ,OAAO,cAAAE,mBAAA,uBAAjBA,mBAAA,CAAmBC,KAAK,CAAC,CAAC;IAC9B;EACJ,CAAC,EAAE,CAACZ,MAAM,CAAC,CAAC;EAEZ,oBACIR,OAAA;IAAQqB,GAAG,EAAEZ,SAAU;IAAAa,QAAA,gBACnBtB,OAAA;MAAAsB,QAAA,EAAKlB;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChB1B,OAAA;MAAO2B,IAAI,EAAC,MAAM;MAACZ,KAAK,EAAEL,UAAW;MAACkB,QAAQ,EAAGf,EAAE,IAAKD,iBAAiB,CAACC,EAAE;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAChF1B,OAAA;MAAK6B,SAAS,EAAE/B,MAAM,CAACgC,OAAQ;MAAAR,QAAA,gBAC3BtB,OAAA;QAAQ+B,OAAO,EAAEA,CAAA,KAAMzB,MAAM,CAACI,UAAU,CAAE;QAAAY,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxD1B,OAAA;QAAQ6B,SAAS,EAAI/B,MAAM,CAACkC,YAAa;QAACD,OAAO,EAAEA,CAAA,KAAM1B,OAAO,CAAC,CAAE;QAAAiB,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEjB,CAAC;AAAAvB,EAAA,CA5BKF,MAAM;AAAAgC,EAAA,GAANhC,MAAM;AA8BZ,eAAeA,MAAM;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}