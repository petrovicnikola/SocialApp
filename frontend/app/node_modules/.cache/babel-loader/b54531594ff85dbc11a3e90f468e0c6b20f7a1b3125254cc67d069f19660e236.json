{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\petro\\\\Desktop\\\\Project\\\\frontend\\\\app\\\\src\\\\status_add\\\\StatusAdd.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport styles from './StatusAdd.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatusAdd = props => {\n  _s();\n  const {\n    userName,\n    callback\n  } = props;\n  const [text, setText] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const handleSubmit = async ev => {\n    ev.preventDefault();\n    const status = {\n      username: userName,\n      text\n    };\n    const response = await fetch('http://localhost:4000/statuses/new', {\n      method: 'POST',\n      body: JSON.stringify(status),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n    if (json['message'] === 'ok') {\n      setText('');\n      setDisabled(true);\n      //dispatch({type: ADD_STATUS,payload: json });\n      callback();\n    }\n  };\n  const handleTextChange = ev => {\n    ev.preventDefault();\n    setText(ev.target.value);\n    if (ev.target.value !== '') setDisabled(false);else setDisabled(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.statusForm,\n      onSubmit: ev => handleSubmit(ev),\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: `What's on your mind, ${userName}?`,\n        onChange: ev => handleTextChange(ev)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.divider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), !disabled && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.btn,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 31\n      }, this), disabled && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.disabledBtn,\n        disabled: disabled,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 30\n      }, this), disabled && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.disabledBtn,\n        disabled: disabled,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(StatusAdd, \"lqO1KUxLdZF6RDS63SnFL1d0mrk=\");\n_c = StatusAdd;\nexport default StatusAdd;\nvar _c;\n$RefreshReg$(_c, \"StatusAdd\");","map":{"version":3,"names":["useState","styles","jsxDEV","_jsxDEV","StatusAdd","props","_s","userName","callback","text","setText","disabled","setDisabled","handleSubmit","ev","preventDefault","status","username","response","fetch","method","body","JSON","stringify","headers","json","handleTextChange","target","value","className","container","children","statusForm","onSubmit","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","divider","btn","disabledBtn","_c","$RefreshReg$"],"sources":["C:/Users/petro/Desktop/Project/frontend/app/src/status_add/StatusAdd.tsx"],"sourcesContent":["import { ChangeEvent, FormEvent, useState } from 'react';\r\nimport styles from './StatusAdd.module.css';\r\n\r\ninterface StatusAddProps {\r\n    userName: string; \r\n    callback: () => void;\r\n  }\r\n  \r\n\r\nconst StatusAdd = (props: StatusAddProps): JSX.Element => {\r\n    const { userName, callback } = props;\r\n\r\n    const [text, setText] = useState<string>('');\r\n    const [disabled, setDisabled] = useState<boolean>(true);\r\n\r\n    const handleSubmit = async (ev: FormEvent<HTMLFormElement>) => {\r\n        ev.preventDefault();\r\n        \r\n        const status = {username: userName, text};\r\n\r\n        const response = await fetch('http://localhost:4000/statuses/new', {\r\n            method: 'POST',\r\n            body: JSON.stringify(status),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        const json = await response.json();\r\n\r\n        if (json['message'] === 'ok'){\r\n            setText('');\r\n            setDisabled(true);\r\n            //dispatch({type: ADD_STATUS,payload: json });\r\n            callback();\r\n        }\r\n    }\r\n\r\n    const handleTextChange = (ev: ChangeEvent<HTMLTextAreaElement>) => {\r\n        ev.preventDefault();\r\n        setText(ev.target.value);\r\n        if (ev.target.value !== '')\r\n            setDisabled(false);\r\n        else\r\n            setDisabled(true);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <form className={styles.statusForm} onSubmit={(ev) => handleSubmit(ev)}>\r\n                <textarea placeholder={`What's on your mind, ${userName}?`} onChange={(ev) => handleTextChange(ev)}/>\r\n                <div className={styles.divider}></div>\r\n                {!disabled && <button className={styles.btn}>Post</button>}\r\n                {disabled && <button className={styles.disabledBtn} disabled={disabled}>Post</button>}\r\n                {disabled && <button className={styles.disabledBtn} disabled={disabled}>Post</button>}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatusAdd;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}