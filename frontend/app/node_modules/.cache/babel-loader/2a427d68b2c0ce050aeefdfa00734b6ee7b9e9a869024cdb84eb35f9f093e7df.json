{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\petro\\\\Desktop\\\\Project\\\\frontend\\\\app\\\\src\\\\feed\\\\Feed.tsx\",\n  _s = $RefreshSig$();\nimport { useUserContext } from \"../hooks/useUserContext\";\nimport StatusAdd from \"../status_add/StatusAdd\";\nimport styles from './Feed.module.css';\nimport useFetch from \"../hooks/useFetch\";\nimport StatusList from \"../status_list/StatusList\";\nimport { useStatusContext } from \"../hooks/useStatusContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Feed = () => {\n  _s();\n  const {\n    state\n  } = useUserContext();\n  const user = state.user;\n  const {\n    data\n  } = useFetch('http://localhost:4000/statuses');\n  const {\n    dispatch,\n    state: statusState\n  } = useStatusContext();\n\n  /*\r\n  useEffect(() => {\r\n      const fetchStatuses = async () => {\r\n          const response = await fetch('http://localhost:4000/statuses')\r\n          const json = await response.json()\r\n    \r\n          if (response.ok) {\r\n            dispatch({type: SET_STATUSES, payload: json})\r\n          }\r\n        }\r\n    \r\n        fetchStatuses()\r\n  }, [dispatch])\r\n  */\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(StatusAdd, {\n        userName: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), data && /*#__PURE__*/_jsxDEV(StatusList, {\n        statuses: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(Feed, \"DBfEdoTGvnBi86Z+5oYGEHPNgIA=\", false, function () {\n  return [useUserContext, useFetch, useStatusContext];\n});\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["useUserContext","StatusAdd","styles","useFetch","StatusList","useStatusContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Feed","_s","state","user","data","dispatch","statusState","children","className","container","userName","name","fileName","_jsxFileName","lineNumber","columnNumber","statuses","_c","$RefreshReg$"],"sources":["C:/Users/petro/Desktop/Project/frontend/app/src/feed/Feed.tsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useUserContext } from \"../hooks/useUserContext\";\r\nimport StatusAdd from \"../status_add/StatusAdd\";\r\nimport styles from './Feed.module.css';\r\nimport useFetch from \"../hooks/useFetch\";\r\nimport StatusList from \"../status_list/StatusList\";\r\nimport { useStatusContext } from \"../hooks/useStatusContext\";\r\nimport { SET_STATUSES } from \"../contexts/StatusContext\";\r\n\r\nconst Feed = (): JSX.Element => {\r\n    const { state } = useUserContext();\r\n    const user = state.user;\r\n    const { data } = useFetch('http://localhost:4000/statuses');\r\n    const { dispatch, state: statusState } = useStatusContext();\r\n\r\n    /*\r\n    useEffect(() => {\r\n        const fetchStatuses = async () => {\r\n            const response = await fetch('http://localhost:4000/statuses')\r\n            const json = await response.json()\r\n      \r\n            if (response.ok) {\r\n              dispatch({type: SET_STATUSES, payload: json})\r\n            }\r\n          }\r\n      \r\n          fetchStatuses()\r\n    }, [dispatch])\r\n    */\r\n    return (\r\n        <>\r\n            {   user && (\r\n                <div className={styles.container}>\r\n                    {/*<h2>Welcome to The Social App Feed, {user && user.name}!</h2>*/}\r\n                    <StatusAdd userName = {user.name} />\r\n                    {data && <StatusList statuses={data}></StatusList>}\r\n                </div>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Feed;"],"mappings":";;AACA,SAASA,cAAc,QAAQ,yBAAyB;AACxD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,UAAU,MAAM,2BAA2B;AAClD,SAASC,gBAAgB,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG7D,MAAMC,IAAI,GAAGA,CAAA,KAAmB;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAM,CAAC,GAAGZ,cAAc,CAAC,CAAC;EAClC,MAAMa,IAAI,GAAGD,KAAK,CAACC,IAAI;EACvB,MAAM;IAAEC;EAAK,CAAC,GAAGX,QAAQ,CAAC,gCAAgC,CAAC;EAC3D,MAAM;IAAEY,QAAQ;IAAEH,KAAK,EAAEI;EAAY,CAAC,GAAGX,gBAAgB,CAAC,CAAC;;EAE3D;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,oBACIE,OAAA,CAAAE,SAAA;IAAAQ,QAAA,EACQJ,IAAI,iBACJN,OAAA;MAAKW,SAAS,EAAEhB,MAAM,CAACiB,SAAU;MAAAF,QAAA,gBAE7BV,OAAA,CAACN,SAAS;QAACmB,QAAQ,EAAIP,IAAI,CAACQ;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACnCX,IAAI,iBAAIP,OAAA,CAACH,UAAU;QAACsB,QAAQ,EAAEZ;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD;EACJ,gBAEP,CAAC;AAEX,CAAC;AAAAd,EAAA,CAhCKD,IAAI;EAAA,QACYV,cAAc,EAEfG,QAAQ,EACgBE,gBAAgB;AAAA;AAAAsB,EAAA,GAJvDjB,IAAI;AAkCV,eAAeA,IAAI;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}